{"version":3,"sources":["contextLib.js","SearchByTags.js","ImageUpload.js","SignIn.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","useAppContext","useContext","SearchByTags","idToken","className","onSubmit","event","console","log","preventDefault","tags","i","$","find","length","trim","eq","val","push","toLowerCase","query","ajaxSetup","beforeSend","xhr","setRequestHeader","ajax","url","method","data","JSON","stringify","success","empty","links","append","removeClass","id","htmlFor","name","type","onClick","parseInt","last","attr","split","elem","addAnother","ImageUpload","useState","file","setFile","toBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","a","fileToConvert","document","querySelector","files","filename","replace","b64","message","getElementById","innerHTML","classList","remove","bsCustomFileInput","init","onChange","e","target","value","SignIn","userHasAuthenticated","setGivenName","setFamilyName","setIdToken","email","setEmail","password","setPassword","page","setPage","newEmail","setNewEmail","newPassword","setNewPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","activationCode","setActivationCode","Auth","signIn","user","attributes","given_name","family_name","signInUserSession","jwtToken","alert","validatePasswords","RegExp","test","passwordCheck","signUp","username","window","confirmSignUp","placeholder","required","autoFocus","for","App","isAuthenticated","givenName","familyName","Provider","data-toggle","data-target","aria-controls","aria-expanded","aria-label","style","lineHeight","to","exact","activeClassName","path","component","Boolean","location","hostname","match","Amplify","configure","mandatorySignIn","region","userPoolId","userPoolWebClientId","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8391848b.chunk.js","sourcesContent":["import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport { useAppContext } from \"./contextLib\";\n\nfunction SearchByTags() {\n    const { idToken } = useAppContext();\n\n    function addAnother() {\n        var id = parseInt($(\"#tagsBlock\").find(\"input\").last().attr('id').split(\"_\")[1]) + 1;\n        var elem = \"<div class=\\\"col-12 col-md-2\\\"><label for=\\\"tag_\" + id + \"\\\">Tag: </label></div><div class=\\\"col-12 col-md-10\\\"><input id=\\\"tag_\" + id + \"\\\" name=\\\"tags[]\\\" class=\\\"form-control\\\"></div>\";\n        $(\"#tagsBlock\").append(elem);\n    }\n    function handleSubmit(event) {\n        console.log(idToken);\n        event.preventDefault();\n        var tags = [];\n        for (var i = 0; i < $(\"#searchForm\").find('input').length; i++) {\n            if ($.trim($(\"#searchForm\").find('input').eq(i).val()) != '')\n                tags.push($(\"#searchForm\").find('input').eq(i).val().toLowerCase());\n        }\n        var query = {\"objects\":tags};\n        // console.log(JSON.stringify(query));\n        $.ajaxSetup({\n            beforeSend: function(xhr) {\n                xhr.setRequestHeader('Content-Type', 'application/json');\n                xhr.setRequestHeader('Authorization', idToken);\n            }\n        });\n        $.ajax({\n            url:'https://igi38i99gg.execute-api.us-east-1.amazonaws.com/query/objects',\n            method:'POST',\n            data:JSON.stringify(query),\n            success:function(data){\n                $(\"#resultsBody\").empty();\n                if(data.links.length > 0) {\n                    for(var i = 0 ; i < data.links.length ; i++)\n                    {\n                        $(\"#resultsBody\").append(\"<tr><td>\"+(i+1)+\"</td><td><a href='\"+data.links[i]+\"' target='_blank'>\"+data.links[i]+\"</a></td></tr>\");\n                    }\n                }\n                else {\n                    $(\"#resultsBody\").append(\"<tr><td colspan='2'>No results found!</td></tr>\");\n                }\n                $(\"#resultsRow\").removeClass('d-none');\n            }\n        })\n\n    }\n\n    return (\n        <>\n            <div className=\"container mt-3\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h3>Enter Tags:</h3>\n                    </div>\n                </div>\n                <form onSubmit={handleSubmit} id=\"searchForm\">\n                    <div className=\"row\" id=\"tagsBlock\">\n                        <div className=\"col-12 col-md-2\">\n                            <label htmlFor=\"tag_1\">Tag: </label>\n                        </div>\n                        <div className=\"col-12 col-md-10\">\n                            <input id=\"tag_1\" name=\"tags[]\" className=\"form-control\" />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <button className=\"btn btn-info\" type=\"button\" onClick={() => addAnother()}>Add another tag</button>\n                        </div>\n                    </div>\n                    <hr />\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <button className=\"btn btn-primary\">Search</button>\n                        </div>\n                    </div>\n                </form>\n                <hr />\n                <div className=\"row d-none\" id=\"resultsRow\">\n                    <div className=\"col-12\">\n                        <h3>Results:</h3>\n                    </div>\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>URL</th>\n                            </tr>\n                        </thead>\n                        <tbody id=\"resultsBody\"></tbody>\n                    </table>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default SearchByTags;","import React, { Component, useState } from 'react';\nimport $ from 'jquery';\nimport bsCustomFileInput from 'bs-custom-file-input'\nimport { useAppContext } from \"./contextLib\";\n\nfunction ImageUpload() {\n    const { idToken } = useAppContext();\n    const [file, setFile] = useState(null);\n\n    const toBase64 = file => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n\n    bsCustomFileInput.init()\n\n    async function handleUpload(event) {\n        event.preventDefault();\n        console.log(idToken);\n        const fileToConvert = document.querySelector('#customFile').files[0];\n        var filename = fileToConvert.name.replace(/C:\\\\fakepath\\\\/, '');\n        // var fileName = document.querySelector(\"#customFile\").files[0].fileName;\n        setFile(filename);\n        // setFile(fileName);\n        var b64 = await toBase64(fileToConvert);\n        b64 = (b64.split(\",\")[1]);\n        // console.log(b64);\n\n        var json = JSON.stringify({\"name\":file, \"file\":b64});\n\n        // Create AJAX\n        $.ajaxSetup({\n            beforeSend: function(xhr) {\n                xhr.setRequestHeader('Content-Type', 'application/json');\n                xhr.setRequestHeader('Authorization', idToken);\n            }\n        });\n        $.ajax({\n            method:\"POST\",\n            url:\"https://yr4b7rndbk.execute-api.us-east-1.amazonaws.com/new/test3\",\n            data:JSON.stringify({\"name\":filename, \"file\":b64}),\n            success:function(data)\n            {\n                // data = JSON.parse(data);\n                console.log(data.url);\n                if(!data.message)\n                {\n                    document.getElementById(\"urlPlaceholder\").innerHTML = '<a href=\"'+data.url+'\">'+data.url+'</a>';\n                    if (data.tags.length > 0)\n                    {\n                        var elem = \"<ul>\";\n                        for(var i = 0 ; i < data.tags.length ; i++)\n                        {\n                            elem += \"<li>\"+data.tags[i]+\"</li>\";\n                        }\n                        elem += \"</ul>\";\n                        document.getElementById(\"tagsPlaceholder\").innerHTML = elem;\n                    }\n                    else document.getElementById(\"tagsPlaceholder\").innerHTML = \"No tags were identified.\";\n                    document.getElementById(\"resultsRow\").classList.remove('d-none');\n                }\n            }\n        })\n        // console.log(await toBase64(file));\n    }\n    return (\n        <>\n            <div className=\"container mt-3\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h3>Select an image:</h3>\n                    </div>\n                </div>\n                <form onSubmit={handleUpload}>\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-9 mt-3\">\n                            <div className=\"custom-file\">\n                                <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" onChange={(e) => setFile(e.target.value)} />\n                                <label className=\"custom-file-label\" htmlFor=\"customFile\">Choose file</label>\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-md-3 mt-3\">\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\">Upload</button>\n                        </div>\n                    </div>\n                </form>\n                <hr />\n                <div className=\"row d-none\" id=\"resultsRow\">\n                    <div className=\"col-12\">\n                        <p>Your image is at: <span id=\"urlPlaceholder\"></span></p>\n                        <p>The tags for this image are:</p>\n                        <div id=\"tagsPlaceholder\"></div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default ImageUpload;","import React, { Component, useState } from 'react';\nimport { Auth } from \"aws-amplify\";\n// import {styles} from './index.css';\nimport { useAppContext } from \"./contextLib\";\n\nfunction SignIn() {\n\n    const { userHasAuthenticated, setGivenName, setFamilyName, setIdToken } = useAppContext();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [page, setPage] = useState(\"signIn\");\n    const [newEmail, setNewEmail] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [activationCode, setActivationCode] = useState(\"\");\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        try {\n            var user = await Auth.signIn(email, password);\n            console.log(user);\n            userHasAuthenticated(true);\n            setGivenName(user.attributes.given_name);\n            setFamilyName(user.attributes.family_name);\n            setIdToken(user.signInUserSession.idToken.jwtToken);\n\n        } catch (e) {\n            alert(e.message);\n        }\n    }\n\n    function validatePasswords() {\n        var regExp = new RegExp(\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{8,}$\");\n        if (regExp.test(newPassword)) {\n            console.log(newPassword, confirmPassword)\n            if (newPassword == confirmPassword) {\n                console.log(\"match\")\n                return 0;\n            }\n            else { console.log(\"No match\"); return 2; }\n        }\n        else { console.log(\"Fail\"); return 1; }\n    }\n\n    async function handleSignUp(event) {\n        event.preventDefault();\n        var passwordCheck = validatePasswords();\n        if (passwordCheck == 0) {\n            // Signup\n            try {\n                const user = await Auth.signUp({\n                    username: newEmail,\n                    password: newPassword,\n                    attributes: {\n                        family_name: lastName,\n                        given_name: firstName\n                    }\n                });\n                console.log({ user });\n            } catch (error) {\n                console.log('error signing up:', error);\n            }\n        }\n        else if (passwordCheck == 1) {\n            // Password doesn't match regexp\n            window.alert(\"Password must contain one uppercase letter, one lowercase letter and one number\");\n            return false;\n        }\n        else if (passwordCheck == 2) {\n            // Password doesn't match confirm\n            window.alert(\"Passwords do not match\");\n            return false;\n        }\n\n    }\n\n    async function handleConfirmation(event) {\n        event.preventDefault();\n        await Auth.confirmSignUp(newEmail, activationCode);\n        setPage(\"signIn\");\n    }\n\n    if (page == \"signIn\") {\n        return (\n            <>\n                <nav className=\"navbar navbar-light text-white bg-primary\">\n                    <h2>TagStore</h2>\n                </nav>\n                <div className=\"container mt-3\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-4 offset-md-4\">\n                            <form className=\"form-signin text-center\" onSubmit={handleSubmit}>\n                                <h1 className=\"display-4\">TagStore</h1>\n                                <h4 className=\"mb-3 font-weight-normal\">Please sign in</h4>\n                                <label className=\"sr-only\">Email address</label>\n                                <input type=\"email\" className=\"form-control\" value={email} onChange={e => setEmail(e.target.value)} placeholder=\"Email address\" required autoFocus />\n                                <label className=\"sr-only\">Password</label>\n                                <input type=\"password\" className=\"form-control\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" required />\n                                <button className=\"btn btn-primary btn-block\" type=\"submit\">Sign in</button>\n                                <hr />\n                                <p>Don't have an account?</p>\n                                <button className=\"btn btn-primary btn-block\" onClick={() => setPage(\"signUp\")}>Sign up!</button>\n                                <hr />\n                                <p>Have a confirmation code?</p>\n                                <button className=\"btn btn-primary btn-block\" onClick={() => setPage(\"activate\")}>Activate account</button>\n\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    else if (page == \"signUp\") {\n        return (\n            <>\n                <nav className=\"navbar navbar-light text-white bg-primary\">\n                    <h2>TagStore</h2>\n                </nav>\n                <div className=\"container mt-3\">\n                    <form onSubmit={handleSignUp}>\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <h3>Personal Details</h3>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 col-md-6\">\n                                <div className=\"form-group\">\n                                    <label for=\"firstName\">First Name</label>\n                                    <input type=\"text\" value={firstName} onChange={(e) => setFirstName(e.target.value)} className=\"form-control\" />\n                                </div>\n                            </div>\n                            <div className=\"col-12 col-md-6\">\n                                <div className=\"form-group\">\n                                    <label for=\"lastName\">Last Name</label>\n                                    <input type=\"text\" value={lastName} onChange={(e) => setLastName(e.target.value)} className=\"form-control\" />\n                                </div>\n                            </div>\n                        </div>\n                        <hr />\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <h3>Login Credentials</h3>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"form-group\">\n                                    <label for=\"email\">Email</label>\n                                    <input type=\"email\" value={newEmail} onChange={(e) => setNewEmail(e.target.value)} className=\"form-control\" />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12 col-md-6\">\n                                <div className=\"form-group\">\n                                    <label for=\"password\">Password</label>\n                                    <input type=\"password\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} className=\"form-control\" />\n                                </div>\n                            </div>\n                            <div className=\"col-12 col-md-6\">\n                                <div className=\"form-group\">\n                                    <label for=\"confirmPassword\">Confirm Password</label>\n                                    <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} className=\"form-control\" />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row mt-3\">\n                            <div className=\"col-12 col-md-4\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign-up</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </>\n        )\n    }\n    else {\n        return (\n            <>\n                <nav className=\"navbar navbar-light text-white bg-primary\">\n                    <h2>TagStore</h2>\n                </nav>\n                <div className=\"container mt-3\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-4 offset-md-4\">\n                            <form className=\"form-signin text-center\" onSubmit={handleConfirmation}>\n                                <h1 className=\"display-4\">TagStore</h1>\n                                <h4 className=\"mb-3 font-weight-normal\">Activate Account</h4>\n                                <label className=\"sr-only\">Email Address</label>\n                                <input type=\"email\" className=\"form-control\" value={newEmail} onChange={e => setNewEmail(e.target.value)} placeholder=\"Email Address\" required autoFocus />\n                                <label className=\"sr-only\">Activation Code</label>\n                                <input type=\"text\" className=\"form-control\" value={activationCode} onChange={e => setActivationCode(e.target.value)} placeholder=\"Activation Code\" required autoFocus />\n                                <button className=\"btn btn-primary btn-block\">Activate account</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\nexport default SignIn;","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\nimport $ from \"jquery\";\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap';\nimport SearchByTags from './SearchByTags';\nimport ImageUpload from './ImageUpload';\nimport SignIn from './SignIn';\nimport { AppContext } from './contextLib';\n// import Routes from \"./Routes\";\n\nfunction App() {\n  function handleLogout() {\n    userHasAuthenticated(false);\n  }\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [givenName, setGivenName] = useState(false);\n  const [familyName, setFamilyName] = useState(false);\n  const [idToken, setIdToken] = useState(false);\n\n\n  if (isAuthenticated) {\n    return (\n      <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated, givenName, setGivenName, familyName, setFamilyName, idToken, setIdToken}}>\n        <Router>\n          <nav className=\"navbar navbar-expand-lg navbar-dark text-white bg-primary\">\n            <h2>TagStore</h2>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item bg-light text-primary rounded px-3\" style={{lineHeight:'42px'}}>Welcome, {givenName + ' ' + familyName}!</li>\n                <li className=\"nav-item\">\n                  <NavLink to=\"/\" exact className='nav-link' activeClassName='active'>Image Upload</NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink to=\"/searchByTags\" exact className='nav-link' activeClassName='active'>Search By Tags</NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <button className=\"nav-link btn btn-default\" onClick={() => handleLogout()}>Logout</button>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <Switch>\n            <Route path=\"/\" exact component={ImageUpload} />\n            <Route path=\"/searchByTags\" exact component={SearchByTags} />\n          </Switch>\n        </Router>\n      </AppContext.Provider>\n    )\n  }\n  else {\n    return (\n      <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated, givenName, setGivenName, familyName, setFamilyName, idToken, setIdToken}}>\n        <SignIn />\n      </AppContext.Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery'\nimport 'popper.js/dist/popper'\nimport 'bootstrap/dist/js/bootstrap'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\nimport { Amplify } from 'aws-amplify'\n\n// Cognito: Aditya's Account \n// Amplify.configure({\n//   Auth: {\n//     mandatorySignIn: true,\n//     region: 'us-east-1',\n//     userPoolId: 'us-east-1_qoCYZyhHa',\n//     userPoolWebClientId: '6rj69edkbbuq9aeecla6526koo'\n//   }\n// });\n\n// Cognito: Nadeesh's Account\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: 'us-east-1',\n    userPoolId: 'us-east-1_Uhsl65aWl',\n    userPoolWebClientId: '737ehjikfr2e4qf1v4fpui4ukt'\n  }\n})\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('appRoot')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}